{"version":3,"sources":["api/unsplash.js","components/ImageCard.js","components/ImageList.js","components/SearchBar.js","components/App.js","index.js"],"names":["unsplash","axios","create","baseURL","headers","Authorization","ImageCard","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","state","React","createRef","this","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","Component","ImageList","images","map","key","id","className","SearchBar","term","onFormSubmit","event","preventDefault","onSubmit","type","value","onChange","e","target","App","onSearchSubmit","a","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"qQASeA,E,OAPEC,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACLC,cAAe,gFCkCRC,G,kBApCX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KAYVC,SAAW,WACP,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAKN,EAAS,IAEjC,EAAKO,SAAS,CAACH,WAff,EAAKI,MAAQ,CAACJ,MAAO,GAErB,EAAKH,SAAWQ,IAAMC,YALR,E,iFASdC,KAAKV,SAASC,QAAQU,iBAAiB,OAAQD,KAAKZ,Y,+BAY/C,IAAD,EACwBY,KAAKb,MAAMe,MAAhCC,EADH,EACGA,YAAaC,EADhB,EACgBA,KAEpB,OACI,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUN,KAAKH,MAAMJ,SACzC,yBACIc,IAAKP,KAAKV,SACVkB,IAAKL,EACLM,IAAKL,EAAKM,e,GA9BNZ,IAAMa,YCgBfC,EAdG,SAACzB,GAEf,IAAM0B,EAAS1B,EAAM0B,OAAOC,KAAI,SAACZ,GAE7B,OAAO,kBAAC,EAAD,CAAWa,IAAKb,EAAMc,GAAId,MAAOA,OAG5C,OACI,yBAAKe,UAAU,cACVJ,ICYEK,E,2MAtBXrB,MAAO,CAACsB,KAAM,I,EAEdC,aAAe,SAACC,GACZA,EAAMC,iBAGN,EAAKnC,MAAMoC,SAAS,EAAK1B,MAAMsB,O,wEAG1B,IAAD,OACJ,OACA,6BACI,0BAAMF,UAAU,kBAAkBM,SAAUvB,KAAKoB,cAC7C,6BACI,+CACA,2BAAOI,KAAK,OAAOC,MAAOzB,KAAKH,MAAMsB,KAAMO,SAAU,SAAAC,GAAC,OAAI,EAAK/B,SAAS,CAACuB,KAAMQ,EAAEC,OAAOH,kB,GAhBpF3B,IAAMa,WCyBfkB,E,2MArBXhC,MAAO,CAACgB,OAAQ,I,EAEhBiB,e,uCAAiB,WAAOX,GAAP,eAAAY,EAAA,sEACUnD,EAASoD,IAAI,iBAAkB,CAClDC,OAAQ,CACJC,MAAOf,KAHF,OACPgB,EADO,OAMb,EAAKvC,SAAS,CAACiB,OAAQsB,EAASC,KAAKC,UANxB,2C,8HAUb,OACI,yBAAKpB,UAAU,eAAeZ,MAAO,CAACiC,UAAW,SAC7C,kBAAC,EAAD,CAAWf,SAAUvB,KAAK8B,iBAC1B,kBAAC,EAAD,CAAWjB,OAAQb,KAAKH,MAAMgB,c,GAhB5Bf,IAAMa,WCDxB4B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.e8bb4934.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst unsplash = axios.create({\r\n    baseURL: 'https://api.unsplash.com',\r\n    headers: {\r\n        Authorization: \"Client-ID 35c747e070ce7aad9c6fe93959e1b7f51af07a1cb33327a1c942c7585bc5f57a\"\r\n    }\r\n});\r\n\r\nexport default unsplash;","import React from \"react\";\r\n\r\nclass ImageCard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {spans: 0};\r\n\r\n        this.imageRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.imageRef.current.addEventListener('load', this.setSpans);\r\n        // console.log(this.imageRef.current.clientHeight);\r\n    }\r\n\r\n    setSpans = () => {\r\n        const height = this.imageRef.current.clientHeight;\r\n\r\n        const spans = Math.ceil(height / 10 );\r\n\r\n        this.setState({spans});\r\n    }\r\n\r\n    render(){\r\n        const {description, urls} = this.props.image;\r\n\r\n        return(\r\n            <div style={{ gridRowEnd: `span ${this.state.spans}`}}>\r\n                <img \r\n                    ref={this.imageRef}\r\n                    alt={description} \r\n                    src={urls.regular}    \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageCard;","import \"./ImageList.css\";\r\nimport React from \"react\";\r\nimport ImageCard from \"./ImageCard\";\r\n\r\nconst ImageList = (props) => {\r\n\r\n    const images = props.images.map((image) => {\r\n        // console.log(image.urls.regular);\r\n        return <ImageCard key={image.id} image={image} />\r\n    });\r\n\r\n    return(\r\n        <div className=\"image-list\">\r\n            {images}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageList;","import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n    state= {term: \"\"};\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        // console.log(this.props.onSubmit);\r\n        // console.log(this.state.term);\r\n        this.props.onSubmit(this.state.term);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n            <form className=\"ui form segment\" onSubmit={this.onFormSubmit}>\r\n                <div>\r\n                    <label>Image Search</label>\r\n                    <input type=\"text\" value={this.state.term} onChange={e => this.setState({term: e.target.value})}/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )}\r\n};\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport unsplash from \"../api/unsplash\";\r\nimport ImageList from \"./ImageList\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nclass App extends React.Component {\r\n    state= {images: []};\r\n\r\n    onSearchSubmit = async (term) => {\r\n        const response = await unsplash.get('/search/photos', {\r\n            params: {\r\n                query: term\r\n            }\r\n        }); \r\n        this.setState({images: response.data.results});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"ui container\" style={{marginTop: \"10px\"}}>\r\n                <SearchBar onSubmit={this.onSearchSubmit} />\r\n                <ImageList images={this.state.images} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}